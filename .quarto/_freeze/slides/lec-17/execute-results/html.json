{
  "hash": "5be03fd78cfc28cda4b0f3cec8e7f359",
  "result": {
    "markdown": "---\ntitle: \"MLR: Inference conditions + multicollinearity\"\nsubtitle: \"STA 210 - Spring 2022\"\nauthor: \"Dr. Mine Ã‡etinkaya-Rundel\"\nfooter: \"[sta210-s22.github.io/website](https://sta210-s22.github.io/website/)\"\nlogo: \"images/logo.png\"\nformat: \n  revealjs:\n    theme: slides.scss\n    transition: fade\n    slide-number: true\n    incremental: true \n    chalkboard: true\neditor: visual\nexecute:\n  freeze: auto\n  echo: true\n---\n\n\n\n\n# Welcome\n\n## Topics\n\n-   Conditions for inference\n\n-   Multicollinearity\n\n## Computational setup\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# load packages\nlibrary(tidyverse)\nlibrary(tidymodels)\nlibrary(knitr)      # for tables\nlibrary(patchwork)  # for laying out plots\nlibrary(rms)        # for vif\n\n# set default theme and larger font size for ggplot2\nggplot2::theme_set(ggplot2::theme_minimal(base_size = 20))\n```\n:::\n\n\n## Data: `rail_trail` {.smaller}\n\n::: nonincremental\n-   The Pioneer Valley Planning Commission (PVPC) collected data for ninety days from April 5, 2005 to November 15, 2005.\n-   Data collectors set up a laser sensor, with breaks in the laser beam recording when a rail-trail user passed the data collection station.\n:::\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nrail_trail <- read_csv(here::here(\"slides\", \"data/rail_trail.csv\"))\nrail_trail\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 90 Ã— 7\n   volume hightemp avgtemp season cloudcover precip day_type\n    <dbl>    <dbl>   <dbl> <chr>       <dbl>  <dbl> <chr>   \n 1    501       83    66.5 Summer       7.60 0      Weekday \n 2    419       73    61   Summer       6.30 0.290  Weekday \n 3    397       74    63   Spring       7.5  0.320  Weekday \n 4    385       95    78   Summer       2.60 0      Weekend \n 5    200       44    48   Spring      10    0.140  Weekday \n 6    375       69    61.5 Spring       6.60 0.0200 Weekday \n 7    417       66    52.5 Spring       2.40 0      Weekday \n 8    629       66    52   Spring       0    0      Weekend \n 9    533       80    67.5 Summer       3.80 0      Weekend \n10    547       79    62   Summer       4.10 0      Weekday \n# â„¹ 80 more rows\n```\n:::\n:::\n\n\nSource: [Pioneer Valley Planning Commission](http://www.fvgreenway.org/pdfs/Northampton-Bikepath-Volume-Counts%20_05_LTA.pdf) via the **mosaicData** package.\n\n## Variables {.smaller}\n\n**Outcome**:\n\n`volume` estimated number of trail users that day (number of breaks recorded)\n\n**Predictors**\n\n::: nonincremental\n-   `hightemp` daily high temperature (in degrees Fahrenheit)\n-   `avgtemp` average of daily low and daily high temperature (in degrees Fahrenheit)\n-   `season` one of \"Fall\", \"Spring\", or \"Summer\"\n-   `cloudcover` measure of cloud cover (in oktas)\n-   `precip` measure of precipitation (in inches)\n-   `day_type` one of \"weekday\" or \"weekend\"\n:::\n\n# Conditions for inference\n\n## Full model {.smaller}\n\nIncluding all available predictors\n\nFit:\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nrt_full_fit <- linear_reg() %>%\n  set_engine(\"lm\") %>%\n  fit(volume ~ ., data = rail_trail)\n```\n:::\n\n\n. . .\n\nSummarize:\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ntidy(rt_full_fit)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 8 Ã— 5\n  term            estimate std.error statistic p.value\n  <chr>              <dbl>     <dbl>     <dbl>   <dbl>\n1 (Intercept)        17.6      76.6      0.230 0.819  \n2 hightemp            7.07      2.42     2.92  0.00450\n3 avgtemp            -2.04      3.14    -0.648 0.519  \n4 seasonSpring       35.9      33.0      1.09  0.280  \n5 seasonSummer       24.2      52.8      0.457 0.649  \n6 cloudcover         -7.25      3.84    -1.89  0.0627 \n7 precip            -95.7      42.6     -2.25  0.0273 \n8 day_typeWeekend    35.9      22.4      1.60  0.113  \n```\n:::\n:::\n\n\n. . .\n\nAugment:\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nrt_full_aug <- augment(rt_full_fit$fit)\n```\n:::\n\n\n## Model conditions\n\n1.  Linearity: There is a linear relationship between the response and predictor variables.\n\n2.  Constant Variance: The variability about the least squares line is generally constant.\n\n3.  Normality: The distribution of the residuals is approximately normal.\n\n4.  Independence: The residuals are independent from each other.\n\n## Residuals vs. predicted values\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nggplot(data = rt_full_aug, aes(x = .fitted, y = .resid)) +\n  geom_point(alpha = 0.5) +\n  geom_hline(yintercept = 0, color = \"red\", linetype = \"dashed\") +\n  labs(x = \"Predicted values\", y = \"Residuals\")\n```\n\n::: {.cell-output-display}\n![](lec-17_files/figure-revealjs/main_res_pred-1.png){fig-align='center' width=90%}\n:::\n:::\n\n\n## Linearity: Residuals vs. predicted\n\n::: question\nDoes the linearity condition appear to be met?\n:::\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](lec-17_files/figure-revealjs/unnamed-chunk-8-1.png){fig-align='center' width=90%}\n:::\n:::\n\n\n## Linearity: Residuals vs. predicted\n\nIf there is some pattern in the plot of residuals vs. predicted values, you can look at individual plots of residuals vs. each predictor to try to identify the issue.\n\n## Linearity: Residuals vs. each predictor\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](lec-17_files/figure-revealjs/unnamed-chunk-9-1.png){fig-align='center' width=90%}\n:::\n:::\n\n\n## Checking linearity\n\n-   The plot of residuals vs. predicted shows a fan shaped pattern\n\n-   The plots of residuals vs. high and low temperature also shows a similar pattern and vs. precipitation does not show a random scatter\n\n-   The linearity condition is not satisfied.\n\n## Checking constant variance\n\n::: question\nDoes the constant variance condition appear to be satisfied?\n:::\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](lec-17_files/figure-revealjs/unnamed-chunk-10-1.png){fig-align='center' width=90%}\n:::\n:::\n\n\n## Checking constant variance\n\n-   The vertical spread of the residuals is not constant across the plot.\n\n-   The constant variance condition is not satisfied.\n\n## Checking normality\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](lec-17_files/figure-revealjs/unnamed-chunk-11-1.png){fig-align='center' width=90%}\n:::\n:::\n\n\n## Overlaying a density plot on a histogram\n\n::: appex\nðŸ“‹ [github.com/sta210-s22/ae-8-rail-trail](https://github.com/sta210-s22/ae-8-rail-trail)\n:::\n\n::: columns\n::: {.column width=\"30%\"}\n::: question\n**Ex 3.** Recreate the following visualization in R based on the results of the model.\n:::\n:::\n\n::: {.column width=\"70%\"}\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](lec-17_files/figure-revealjs/density-1.png){fig-align='center' width=100%}\n:::\n:::\n\n:::\n:::\n\n## Checking independence\n\n-   We can often check the independence condition based on the context of the data and how the observations were collected.\n\n-   If the data were collected in a particular order, examine a scatterplot of the residuals versus order in which the data were collected.\n\n-   If there is a grouping variable lurking in the background, check the residuals based on that grouping variable.\n\n## Checking independence\n\nResiduals vs. order of data collection:\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nggplot(rt_full_aug, aes(y = .resid, x = 1:nrow(rt_full_aug))) +\n  geom_point() +\n  labs(x = \"Order of data collection\", y = \"Residuals\")\n```\n\n::: {.cell-output-display}\n![](lec-17_files/figure-revealjs/unnamed-chunk-13-1.png){fig-align='center' width=90%}\n:::\n:::\n\n\n## Checking independence\n\nResiduals vs. predicted values by `season`:\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](lec-17_files/figure-revealjs/unnamed-chunk-14-1.png){fig-align='center' width=90%}\n:::\n:::\n\n\n## Checking independence\n\nResiduals vs. predicted values by `day_type`:\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](lec-17_files/figure-revealjs/unnamed-chunk-15-1.png){fig-align='center' width=90%}\n:::\n:::\n\n\n## Checking independence\n\nNo clear pattern in the residuals vs. order of data collection plot and the model predicts similarly for seasons and day types.\nIndependence condition appears to be satisfied, as far as we can evaluate it.\n\n# Multicollinearity\n\n## Why multicollinearity is a problem\n\n-   We can't include two variables that have a perfect linear association with each other\n\n-   If we did so, we could not find unique estimates for the model coefficients\n\n## Example {.smaller}\n\nSuppose the true population regression equation is $y = 3 + 4x$\n\n-   Suppose we try estimating that equation using a model with variables $x$ and $z = x/10$\n\n$$\n\\begin{aligned}\\hat{y}&= \\hat{\\beta}_0 + \\hat{\\beta}_1x  + \\hat{\\beta}_2z\\\\\n&= \\hat{\\beta}_0 + \\hat{\\beta}_1x  + \\hat{\\beta}_2\\frac{x}{10}\\\\\n&= \\hat{\\beta}_0 + \\bigg(\\hat{\\beta}_1 + \\frac{\\hat{\\beta}_2}{10}\\bigg)x\n\\end{aligned}\n$$\n\n## Example {.smaller}\n\n$$\\hat{y} = \\hat{\\beta}_0 + \\bigg(\\hat{\\beta}_1 + \\frac{\\hat{\\beta}_2}{10}\\bigg)x$$\n\n-   We can set $\\hat{\\beta}_1$ and $\\hat{\\beta}_2$ to any two numbers such that $\\hat{\\beta}_1 + \\frac{\\hat{\\beta}_2}{10} = 4$\n\n-   Therefore, we are unable to choose the \"best\" combination of $\\hat{\\beta}_1$ and $\\hat{\\beta}_2$\n\n## Why multicollinearity is a problem\n\n-   When we have almost perfect collinearities (i.e. highly correlated predictor variables), the standard errors for our regression coefficients inflate\n\n-   In other words, we lose precision in our estimates of the regression coefficients\n\n-   This impedes our ability to use the model for inference or prediction\n\n## Detecting Multicollinearity\n\nMulticollinearity may occur when... - There are very high correlations $(r > 0.9)$ among two or more predictor variables, especially when the sample size is small\n\n-   One (or more) predictor variables is an almost perfect linear combination of the others\n\n-   Include a quadratic in the model mean-centering the variable first\n\n-   Including interactions between two or more continuous variables\n\n## Detecting multicollinearity in the EDA\n\n-   Look at a correlation matrix of the predictor variables, including all indicator variables\n    -   Look out for values close to 1 or -1\n-   Look at a scatterplot matrix of the predictor variables\n    -   Look out for plots that show a relatively linear relationship\n\n## Detecting Multicollinearity (VIF)\n\n**Variance Inflation Factor (VIF)**: Measure of multicollinearity in the regression model\n\n$$VIF(\\hat{\\beta}_j) = \\frac{1}{1-R^2_{X_j|X_{-j}}}$$\n\nwhere $R^2_{X_j|X_{-j}}$ is the proportion of variation $X$ that is explained by the linear combination of the other explanatory variables in the model.\n\n## Detecting Multicollinearity (VIF)\n\nTypically $VIF > 10$ indicates concerning multicollinearity - Variables with similar values of VIF are typically the ones correlated with each other\n\n<br>\n\nUse the `vif()` function in the **rms** R package to calculate VIF\n\n## VIF For SAT Model\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nvif(rt_full_fit$fit)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n       hightemp         avgtemp    seasonSpring    seasonSummer      cloudcover \n      10.259978       13.086175        2.751577        5.841985        1.587485 \n         precip day_typeWeekend \n       1.295352        1.125741 \n```\n:::\n:::\n\n\n. . .\n\n`hightemp` and `avgtemp` are correlated.\nWe need to remove one of these variables and refit the model.\n\n## Model without `hightemp` {.smaller}\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nm1 <- linear_reg() %>%\n  set_engine(\"lm\") %>%\n  fit(volume ~ . - hightemp, data = rail_trail)\n  \nm1 %>%\n  tidy() %>%\n  kable(digits = 3)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<table>\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> term </th>\n   <th style=\"text-align:right;\"> estimate </th>\n   <th style=\"text-align:right;\"> std.error </th>\n   <th style=\"text-align:right;\"> statistic </th>\n   <th style=\"text-align:right;\"> p.value </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> (Intercept) </td>\n   <td style=\"text-align:right;\"> 76.071 </td>\n   <td style=\"text-align:right;\"> 77.204 </td>\n   <td style=\"text-align:right;\"> 0.985 </td>\n   <td style=\"text-align:right;\"> 0.327 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> avgtemp </td>\n   <td style=\"text-align:right;\"> 6.003 </td>\n   <td style=\"text-align:right;\"> 1.583 </td>\n   <td style=\"text-align:right;\"> 3.792 </td>\n   <td style=\"text-align:right;\"> 0.000 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> seasonSpring </td>\n   <td style=\"text-align:right;\"> 34.555 </td>\n   <td style=\"text-align:right;\"> 34.454 </td>\n   <td style=\"text-align:right;\"> 1.003 </td>\n   <td style=\"text-align:right;\"> 0.319 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> seasonSummer </td>\n   <td style=\"text-align:right;\"> 13.531 </td>\n   <td style=\"text-align:right;\"> 55.024 </td>\n   <td style=\"text-align:right;\"> 0.246 </td>\n   <td style=\"text-align:right;\"> 0.806 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> cloudcover </td>\n   <td style=\"text-align:right;\"> -12.807 </td>\n   <td style=\"text-align:right;\"> 3.488 </td>\n   <td style=\"text-align:right;\"> -3.672 </td>\n   <td style=\"text-align:right;\"> 0.000 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> precip </td>\n   <td style=\"text-align:right;\"> -110.736 </td>\n   <td style=\"text-align:right;\"> 44.137 </td>\n   <td style=\"text-align:right;\"> -2.509 </td>\n   <td style=\"text-align:right;\"> 0.014 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> day_typeWeekend </td>\n   <td style=\"text-align:right;\"> 48.420 </td>\n   <td style=\"text-align:right;\"> 22.993 </td>\n   <td style=\"text-align:right;\"> 2.106 </td>\n   <td style=\"text-align:right;\"> 0.038 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n\n```{.r .cell-code}\nglance(m1) %>%\n  select(adj.r.squared, AIC, BIC)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 Ã— 3\n  adj.r.squared   AIC   BIC\n          <dbl> <dbl> <dbl>\n1         0.421 1088. 1108.\n```\n:::\n:::\n\n\n## Model without `avgtemp`\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nm2 <- linear_reg() %>%\n  set_engine(\"lm\") %>%\n  fit(volume ~ . - avgtemp, data = rail_trail)\n  \nm2 %>%\n  tidy() %>%\n  kable(digits = 3)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<table>\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> term </th>\n   <th style=\"text-align:right;\"> estimate </th>\n   <th style=\"text-align:right;\"> std.error </th>\n   <th style=\"text-align:right;\"> statistic </th>\n   <th style=\"text-align:right;\"> p.value </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> (Intercept) </td>\n   <td style=\"text-align:right;\"> 8.421 </td>\n   <td style=\"text-align:right;\"> 74.992 </td>\n   <td style=\"text-align:right;\"> 0.112 </td>\n   <td style=\"text-align:right;\"> 0.911 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> hightemp </td>\n   <td style=\"text-align:right;\"> 5.696 </td>\n   <td style=\"text-align:right;\"> 1.164 </td>\n   <td style=\"text-align:right;\"> 4.895 </td>\n   <td style=\"text-align:right;\"> 0.000 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> seasonSpring </td>\n   <td style=\"text-align:right;\"> 31.239 </td>\n   <td style=\"text-align:right;\"> 32.082 </td>\n   <td style=\"text-align:right;\"> 0.974 </td>\n   <td style=\"text-align:right;\"> 0.333 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> seasonSummer </td>\n   <td style=\"text-align:right;\"> 9.424 </td>\n   <td style=\"text-align:right;\"> 47.504 </td>\n   <td style=\"text-align:right;\"> 0.198 </td>\n   <td style=\"text-align:right;\"> 0.843 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> cloudcover </td>\n   <td style=\"text-align:right;\"> -8.353 </td>\n   <td style=\"text-align:right;\"> 3.435 </td>\n   <td style=\"text-align:right;\"> -2.431 </td>\n   <td style=\"text-align:right;\"> 0.017 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> precip </td>\n   <td style=\"text-align:right;\"> -98.904 </td>\n   <td style=\"text-align:right;\"> 42.137 </td>\n   <td style=\"text-align:right;\"> -2.347 </td>\n   <td style=\"text-align:right;\"> 0.021 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> day_typeWeekend </td>\n   <td style=\"text-align:right;\"> 37.062 </td>\n   <td style=\"text-align:right;\"> 22.280 </td>\n   <td style=\"text-align:right;\"> 1.663 </td>\n   <td style=\"text-align:right;\"> 0.100 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n\n```{.r .cell-code}\nglance(m2) %>%\n  select(adj.r.squared, AIC, BIC)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 Ã— 3\n  adj.r.squared   AIC   BIC\n          <dbl> <dbl> <dbl>\n1         0.473 1079. 1099.\n```\n:::\n:::\n\n\n## Choosing a model\n\nModel with **hightemp** removed:\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n`````{=html}\n<table>\n <thead>\n  <tr>\n   <th style=\"text-align:right;\"> adj.r.squared </th>\n   <th style=\"text-align:right;\"> AIC </th>\n   <th style=\"text-align:right;\"> BIC </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:right;\"> 0.42 </td>\n   <td style=\"text-align:right;\"> 1087.5 </td>\n   <td style=\"text-align:right;\"> 1107.5 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\nModel with **avgtemp** removed:\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n`````{=html}\n<table>\n <thead>\n  <tr>\n   <th style=\"text-align:right;\"> adj.r.squared </th>\n   <th style=\"text-align:right;\"> AIC </th>\n   <th style=\"text-align:right;\"> BIC </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:right;\"> 0.47 </td>\n   <td style=\"text-align:right;\"> 1079.05 </td>\n   <td style=\"text-align:right;\"> 1099.05 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\nBased on Adjusted $R^2$, AIC, and BIC, the model with **avgtemp** removed is a better fit.\nTherefore, we choose to remove **avgtemp** from the model and leave **hightemp** in the model to deal with the multicollinearity.\n\n## Recap\n\n-   Conditions for inference\n\n-   Multicollinearity\n",
    "supporting": [
      "lec-17_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\r\n<script>\r\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\r\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\r\n  // slide changes (different for each slide format).\r\n  (function () {\r\n    // dispatch for htmlwidgets\r\n    function fireSlideEnter() {\r\n      const event = window.document.createEvent(\"Event\");\r\n      event.initEvent(\"slideenter\", true, true);\r\n      window.document.dispatchEvent(event);\r\n    }\r\n\r\n    function fireSlideChanged(previousSlide, currentSlide) {\r\n      fireSlideEnter();\r\n\r\n      // dispatch for shiny\r\n      if (window.jQuery) {\r\n        if (previousSlide) {\r\n          window.jQuery(previousSlide).trigger(\"hidden\");\r\n        }\r\n        if (currentSlide) {\r\n          window.jQuery(currentSlide).trigger(\"shown\");\r\n        }\r\n      }\r\n    }\r\n\r\n    // hookup for slidy\r\n    if (window.w3c_slidy) {\r\n      window.w3c_slidy.add_observer(function (slide_num) {\r\n        // slide_num starts at position 1\r\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\r\n      });\r\n    }\r\n\r\n  })();\r\n</script>\r\n\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}